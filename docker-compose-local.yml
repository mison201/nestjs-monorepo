version: '3'

services:
  redis:
    image: redis:alpine
    ports:
      - '6380:6379'
    volumes:
      - .data/redis:/data
    environment:
      REDIS_PASSWORD: redis

  postgres:
    image: postgres:12-alpine
    ports:
      - '5432:5432'
    hostname: postgres-db
    volumes:
      - .data/postgres:/var/lib/postgresql/data
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      APP_DB_USER: metabase
      APP_DB_PASS: metabase
      APP_DB_NAME: pikasso
      APP_DB_EXCHANGE_NAME: exchange

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: monorepo_elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - http.cors.enabled=true
      - http.cors.allow-origin="https://app.elasticvue.com"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - .data/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  kibana:
    container_name: monorepo-kibana
    image: docker.elastic.co/kibana/kibana:7.4.0
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200 # address of elasticsearch docker container which kibana will connect
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch # kibana will start when elasticsearch has started
  jaegertracing:
    container_name: monorepo_jaegertracing
    image: jaegertracing/all-in-one:latest
    env_file:
      - .env
    ports:
      - '5775:5775/udp'
      - '6831:6831/udp'
      - '6832:6832/udp'
      - '5778:5778'
      - '16686:16686'
      - '14268:14268'
      - '9411:9411'
